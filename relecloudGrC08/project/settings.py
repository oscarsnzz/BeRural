"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

import environ 
env = environ.Env()
environ.Env.read_env()

ENVIROMENT = env('ENVIROMENT', default="production")  # 'development' or 'production'
# Build paths inside the project like this: BASE_DIR / 'subdir'.
 # Cambia esto a 'development' para desarrollo local
# ENVIROMENT = 'development'  # Cambia esto a 'production' para producción
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-1ob-uoz1^jeo-l%ns4@9_i&81$6t%k7%3h(b4(oe6l19!x1@4#"
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

AUTH_USER_MODEL = 'relecloud.Usuario'  # Ya que usas un modelo de usuario personalizado

AUTHENTICATION_BACKENDS = [
    'relecloud.backends.EmailBackend',  # el backend que acabamos de crear
]


ALLOWED_HOSTS = ['berural.onrender.com','localhost', '127.0.0.1']

CSRF_TRUSTED_ORIGINS = ['https://berural.onrender.com']

# Application definition

INSTALLED_APPS = [
    "daphne",
    "channels",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "relecloud.apps.RelecloudConfig",
    'crispy_forms',
    'crispy_bootstrap5',
    'django_htmx',
    'cloudinary',
    'cloudinary_storage',


]

CRISPY_ALLOWED_TEMPLATE_PACKS = ["bootstrap5"]
CRISPY_TEMPLATE_PACK= "bootstrap5"

ROOT_URLCONF = "project.urls"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'relecloud' / 'templates'],  # Añadir esta ruta
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'django_htmx.middleware.HtmxMiddleware',
]

# WSGI_APPLICATION = "project.wsgi.application"

ASGI_APPLICATION = "project.asgi.application"

if ENVIROMENT == 'development':
    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels.layers.InMemoryChannelLayer"
        }
    }
else :
    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels_redis.core.RedisChannelLayer",
            "CONFIG": {
                "hosts": [(env('REDIS_URL'))],
            },
        }
    }



# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": "mydatabase",
if ENVIROMENT == 'development':
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": "mydatabase",
        }
    }
else:
   import dj_database_url
   DATABASES = {
       'default': dj_database_url.parse(env('DATABASE_URL')),
   }
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_STORAGE="whitenoise.storage.CompressedManifestStaticFilesStorage"
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

# Media files (uploaded files like images)
MEDIA_URL = '/media/'

if ENVIROMENT == 'development':
   MEDIA_ROOT = BASE_DIR / 'media'
else:
   default_storage = 'cloudinary_storage.storage.MediaCloudinaryStorage'
   CLOUDINARY_STORAGE = {
       'CLOUDINARY_URL': env('CLOUDINARY_URL')
   }


# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'berural.app@gmail.com'
EMAIL_HOST_PASSWORD = 'bicxhggdyjhqkxkw'

LOGOUT_REDIRECT_URL = '/'

